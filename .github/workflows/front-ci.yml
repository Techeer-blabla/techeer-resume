name: CI

on:
  push:
    branches:
      - 'fe/**'  # fe/Î°ú ÏãúÏûëÌïòÎäî Î™®Îì† Î∏åÎûúÏπòÏóê ÎåÄÌï¥ Ìë∏Ïãú Ïù¥Î≤§Ìä∏ Ìä∏Î¶¨Í±∞
  pull_request:
    branches:
      - main
      - develop

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]  # Node.js Î≤ÑÏ†ÑÏùÑ 18.xÏôÄ 20.xÎ°ú ÏóÖÎç∞Ïù¥Ìä∏

    # PRÏùò ÏÜåÏä§ Î∏åÎûúÏπòÍ∞Ä fe/Î°ú ÏãúÏûëÌïòÍ≥†, Ïª§Î∞ã Ï£ºÏ≤¥Í∞Ä GitHub ActionsÍ∞Ä ÏïÑÎãå Í≤ΩÏö∞ÏóêÎßå Ïã§Ìñâ
    if: >
      (startsWith(github.head_ref, 'fe/') ||
      (github.event_name == 'pull_request' && startsWith(github.event.pull_request.head.ref, 'fe/'))) &&
      github.actor != 'github-actions[bot]' &&
      !contains(github.event.head_commit.message, '[skip ci]')

    steps:
      # 1. Î¶¨Ìè¨ÏßÄÌÜ†Î¶¨ Ï≤¥ÌÅ¨ÏïÑÏõÉ
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ï†ÑÏ≤¥ ÌûàÏä§ÌÜ†Î¶¨Î•º Í∞ÄÏ†∏ÏòµÎãàÎã§.

      # 2. frontend ÎîîÎ†âÌÜ†Î¶¨ ÎÇ¥Ïö© ÌôïÏù∏ (ÎîîÎ≤ÑÍπÖÏö©)
      - name: List frontend directory (Debug)
        run: |
          echo "Listing frontend directory:"
          ls -la frontend/
          echo "Checking yarn.lock:"
          ls -la frontend/yarn.lock

      # 3. Node.js ÏÑ§Ï†ï
      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # 4. Yarn Ï∫êÏãú ÏÑ§Ï†ï (frontend/yarn.lock Í∏∞Î∞ò)
      - name: Cache Yarn dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles('frontend/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # 5. ÏùòÏ°¥ÏÑ± ÏÑ§Ïπò
      - name: Install dependencies
        run: yarn install --frozen-lockfile
        working-directory: frontend

      # 6. ESLint Ïã§Ìñâ
      - name: Run ESLint
        run: yarn lint
        working-directory: frontend

      # 7. Prettier ÏûêÎèô ÏàòÏ†ï Î∞è Ïª§Î∞ã
      - name: Run Prettier and commit changes if any
        run: |
          # PrettierÎ°ú ÏΩîÎìú Ìè¨Îß∑ÌåÖ
          yarn prettier --write "src/**/*.{js,jsx,ts,tsx,css,scss,md}"

          # Î≥ÄÍ≤Ω ÏÇ¨Ìï≠Ïù¥ ÏûàÎäîÏßÄ ÌôïÏù∏
          if [[ `git status --porcelain` ]]; then
            # Git ÏÇ¨Ïö©Ïûê ÏÑ§Ï†ï
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"

            # Î≥ÄÍ≤Ω ÏÇ¨Ìï≠ Ïª§Î∞ã
            git add .
            git commit -m "chore: auto-format code [skip ci]"

            # ÌòÑÏû¨ Î∏åÎûúÏπò Ïù¥Î¶Ñ Í∞ÄÏ†∏Ïò§Í∏∞
            if [ "${GITHUB_EVENT_NAME}" == "pull_request" ]; then
              BRANCH_NAME=${GITHUB_HEAD_REF}
            else
              BRANCH_NAME=$(echo "${GITHUB_REF#refs/heads/}")
            fi

            # Î≥ÄÍ≤Ω ÏÇ¨Ìï≠ Ìë∏Ïãú
            git push origin HEAD:${BRANCH_NAME}
          fi
        working-directory: frontend

      # 8. ÌÉÄÏûÖ Ï≤¥ÌÅ¨
      - name: Type Check
        run: yarn type-check
        working-directory: frontend

#      # 9. ÌÖåÏä§Ìä∏ Ïã§Ìñâ
#      - name: Run Tests
#        run: yarn test --coverage
#        working-directory: frontend

      # 10. ÎπåÎìú Ïã§Ìñâ
      - name: Build
        run: yarn build
        working-directory: frontend

#      # 11. ÎπåÎìú ÏïÑÌã∞Ìå©Ìä∏ ÏóÖÎ°úÎìú
#      - name: Upload Artifacts
#        if: success()
#        uses: actions/upload-artifact@v3
#        with:
#          name: build-artifacts
#          path: frontend/build/

      - name: Lighthouse Run
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
        run: |
          yarn add @lhci/cli
          lhci autorun || echo "LHCI failed!"

      - name: Format lighthouse score
        id: format_lighthouse_score
        uses: actions/github-script@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync('${{ github.workspace }}/frontend/lhci_reports/manifest.json'));
            let comments = "";

            const { summary, jsonPath } = results[0];

            const details = JSON.parse(fs.readFileSync(jsonPath));
            const { audits } = details;

            const formatResult = (res) => Math.round(res * 100);

            Object.keys(summary).forEach(
              (key) => (summary[key] = formatResult(summary[key]))
            );

            const score = (res) => (res >= 90 ? "üü¢" : res >= 50 ? "üü†" : "üî¥");

            const comment = [
              `## ‚ö°Ô∏è Lighthouse Report`,
              `| Category | Score |`,
              `| --- | --- |`,
              `| ${score(summary.performance)} Performance | ${summary.performance} |`,
              `| ${score(summary.accessibility)} Accessibility | ${summary.accessibility} |`,
              `| ${score(summary[`best-practices`])} Best Practices | ${summary[`best-practices`]} |`,
              `| ${score(summary.seo)} Seo | ${summary.seo} |`,
              `| ${score(summary.pwa)} Pwa | ${summary.pwa} |`
            ].join("\n");

            const detail = [
              ``,
              `| Category | Score |`,
              `| --- | --- |`,
              `| ${score(
                audits[`first-contentful-paint`].score * 100
              )} First Contentful Paint | ${
                audits[`first-contentful-paint`].displayValue
              } |`,
              `| ${score(
                audits[`speed-index`].score * 100
              )} Speed Index | ${
                audits[`speed-index`].displayValue
              } |`,
              `| ${score(
                audits[`total-blocking-time`].score * 100
              )} Total Blocking Time | ${
                audits[`total-blocking-time`].displayValue
              } |`,
              `| ${score(
                audits[`largest-contentful-paint`].score * 100
              )} Largest Contentful Paint | ${
                audits[`largest-contentful-paint`].displayValue
              } |`,
              `| ${score(
                audits[`cumulative-layout-shift`].score * 100
              )} Cumulative Layout Shift | ${
                audits[`cumulative-layout-shift`].displayValue
              } |`
            ].join("\n");

            comments += comment + "\n" + detail + "\n";

            core.setOutput('comments', comments);