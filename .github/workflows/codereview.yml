name: Code Review

permissions:
  contents: read
  pull-requests: write

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  backend_review:
    defaults:
      run:
        working-directory: backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: "gpt-4o-mini"
          PROMPT: "code review please"
          top_p: 1
          temperature: 0.7
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000

  frontend_review:
    defaults:
      run:
        working-directory: frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: "gpt-4o-mini"
          PROMPT: "code review please"
          top_p: 1
          temperature: 0.7
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000

  root_files_review:
    runs-on: ubuntu-latest
    if: github.event.pull_request.files.some(file => ['.gitignore', 'Dockerfile'].includes(file.filename))
    steps:
      - uses: actions/checkout@v2
      - uses: anc95/ChatGPT-CodeReview@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          LANGUAGE: Korean
          OPENAI_API_ENDPOINT: https://api.openai.com/v1
          MODEL: "gpt-4o-mini"
          PROMPT: "code review please"
          top_p: 1
          temperature: 0.7
          max_tokens: 10000
          MAX_PATCH_LENGTH: 10000
